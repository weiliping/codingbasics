#
# @lc app=leetcode.cn id=2589 lang=python3
#
# [2589] 完成所有任务的最少时间
#

# @lc code=start
from typing import List


class Solution:
    def findMinimumTime(self, tasks: List[List[int]]) -> int:
        tasks.sort(key=lambda t: t[1])
        mp = [False] * (tasks[-1][1] + 1)
        for s, e, d in tasks:
            d -= sum(mp[s:e+1])
            if d > 0:
                for i in range(e, s - 1, -1):
                    if mp[i]:
                        continue
                    mp[i] = True
                    d -= 1
                    if d == 0:
                        break
        return sum(mp)


# s = Solution()
# print(s.findMinimumTime([[2, 3, 1], [4, 5, 1], [1, 5, 2]]))  # 2
# print(s.findMinimumTime([[7, 13, 1], [1, 18, 6], [9, 20, 6], [2, 17, 1]]))  # 6
# print(s.findMinimumTime([[2, 19, 6], [14, 20, 4], [2, 16, 2]]))  # 6

# print(s.findMinimumTime([[1, 3, 2], [2, 5, 3], [5, 6, 2]]))  # 4
# print(s.findMinimumTime([[2, 13, 2], [6, 18, 5], [2, 13, 3]]))  # 5
# print(s.findMinimumTime([[68, 129, 2], [58, 86, 9], [112, 142, 10], [106, 108, 1], [48, 48, 1], [116, 143, 2], [28, 43, 5], [1, 1, 1], [75, 83, 3], [104, 136, 10], [11, 11, 1], [60, 63, 1], [73, 111, 8], [57, 57, 1], [117, 119, 3], [25, 38, 2], [20, 21, 1], [78, 80, 2], [17, 17, 1], [28, 28, 1], [77, 117, 3], [76, 109, 4], [61, 61, 1], [84, 92, 5], [18, 41, 4], [47, 55, 9], [74, 132, 6], [53, 87, 3], [102, 131, 7], [
#   26, 26, 1], [66, 68, 3], [59, 73, 1], [22, 30, 9], [9, 13, 2], [31, 35, 2], [90, 91, 2], [72, 72, 1], [62, 84, 8], [105, 106, 2], [3, 3, 1], [32, 32, 1], [99, 103, 4], [45, 52, 4], [108, 116, 3], [91, 123, 8], [89, 114, 4], [94, 130, 7], [103, 104, 2], [14, 17, 4], [63, 66, 4], [98, 112, 7], [101, 140, 9], [58, 58, 1], [109, 145, 1], [8, 15, 8], [4, 16, 5], [115, 141, 1], [40, 50, 4], [118, 118, 1], [81, 120, 7]]))
# for i in range(1, 11):
# print(s.topKth([5, 3, 6, 1, 2, 7, 0, 9, 4, 8], 0, 9, i))

# @lc code=end
