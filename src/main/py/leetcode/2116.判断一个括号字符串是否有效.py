#
# @lc app=leetcode.cn id=2116 lang=python3
#
# [2116] 判断一个括号字符串是否有效
#

# @lc code=start
from typing import List


class Solution:
    def canBeValid(self, s: str, locked: str) -> bool:
        n, l, r = len(s), 0, 0
        if n & 1 == 1:
            return False
        for i in range(n):
            if locked[i] == '1' and s[i] == ')':
                r += 1
                if i + 1 - r < r:
                    return False

        for i in range(n - 1, -1, -1):
            if locked[i] == '1' and s[i] == '(':
                l += 1
                if n - i - l < l:
                    return False
        return True


# s = Solution()
# print(s.canBeValid("))()))", "010100"))
# print(s.canBeValid("()()", "0000"))
# print(s.canBeValid(")", "0"))
# f = "()()))()())(((()((()((()((()()()))(()()((()((()()(((()())))))()((()(()(())((()()((())))))))(())(())))()()()((()())())(()()))((((((())()())())))))())((((()())(())(())()()()(()(()((()))((((()((()((()())(())((((())(())))(()((((())))((()(((((()()))))((((()))))())()))))())"
# l = "0111000100000011110100010110101001110111010111110111111011101000100000011101010000110110001100100100100011000001110101101110011000000011111000111111111001011101100000100111010111010000001100011101000110101011001000100100111110110110100101010111111001000010000010010010"
# f = "((((()))((((((())(())))((()))()))()())(()()))()())(()(((()((())))(()()))()()())((()()()()))()))()(())()(())(()())())((())())))((()()((()(()(()))(((()(((()))())(())()))()((())))()(())()))(((()))((((())()))(((((()(()(()()(())())(())((()())(())((())((((())(()((((()))())()()(()()))()()((()()()()())(()(()(()))())())(())()())((((())))((((())(()()()(())())(()()((())(()((()()())))))))()((()((()())((()()(()))()(((()))(()(()))()))((((((((((((())())()))))((()(()()(())((((()))))())()()(()()(()((())(()(()((()((()))())))(()))()()))(((((())((()((()()(((())((((((((())())))))))(((())))))(()())(()))((()()))))))))())()))()(()())(())(((()))((())))(()())((()((())())())(()()(())(()()()(((()()(()))()((())()))))((()))()()(((((((()()))())())))(((())((()))(((())(()())())(())()()))))(()(())())()))))(()())(((((()))((()()))()())(()())(()(()())(((((())))(()()))()(()()))()(()(()(((())()()))()()((()()))(()()((((()))((()))())))))()()())))())())(((()))(((()(()))(()(()((())(())()))()(())()())(((((()())))))()()((()(()())(())(()()()())())))())((((((()))))())((())((((()()((())()()()))))))()(())((()))))()())((()(())()((()()()((())()(()()()))))()()((((()(((())()))()((((()())))((((()())))))()()()(()())(((()())))((())())))())((()()()))((()((((((())(((((()(()())))()(((()))))((((()()()))(()))((()))((()(()))(())(()())))(((())()))()()()()))))())((())))()()))(((((()(())))))))((()(()(((())()()(())))(()))(())()))())(((()()(()((()))))((()()((()(((())((()((()()()()))))))(()((((((((())())((()(((())()))())()()))((((()((())()))))(()))()()))))((())(())(()))()()))()((()(())()((((((()))()())()()))()))))((())())()((()()(()()((((()((()()()()))())))()((((()))())()(()))())())((((()))(())(()))((())))(()())())((()))()))))(())()((((())()()))(((()(())((((()(()))))))))(()()()(())((()()"
# l
# print(s.canBeValid(f, l))
# @lc code=end
