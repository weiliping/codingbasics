#!/bin/python3

import math
import os
import random
import re
import sys


#
# Complete the 'longestSubarray' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY arr as parameter.
#

def longestSubarray(arr):
    # Write your code here
    n = len(arr)
    i, j = 0, 0
    di = -2
    preI, preJ = 0, 0
    res = 0
    while j < n:
        if arr[j] == arr[i]:
            preI = j
            j += 1
            continue
        if di == -2:
            if abs(arr[j] - arr[i]) < 2:
                di = arr[j] - arr[i]
                preJ = j
                j += 1
                continue
            res = max(res, j - i)
            i = j
            continue
        if arr[j] == arr[i] + di:
            preJ = j
            j += 1
            continue
        res = max(res, j - i)
        lI = preI if preI > preJ else preJ
        if abs(arr[lI] - arr[j]) > 1:
            di = -2
            i = j
            continue
        i = (preI if preI < preJ else preJ) + 1
        preI = i
        di = arr[j] - arr[i]
        if di == 0:
            di = -2
    return max(res, j - i)


print(longestSubarray([1, 2, 3, 4, 5]))
print(longestSubarray([2, 2, 1]))
arr = [914498436, 914498434, 914498435, 914498436, 914498436, 914498434, 914498435, 914498435, 914498435, 914498435, 914498436, 914498434, 914498435, 914498434, 914498435, 914498434, 914498435, 914498434, 914498436, 914498436, 914498434, 914498434, 914498436, 914498434, 914498434, 914498436, 914498435, 914498435, 914498436, 914498435, 914498434, 914498435, 914498436, 914498436, 914498435, 914498436, 914498434, 914498434, 914498434, 914498436, 914498435, 914498436, 914498435, 914498434, 914498435, 914498436, 914498435, 914498434, 914498434, 914498435, 914498436, 914498434, 914498435, 914498434, 914498436, 914498435, 914498436, 914498434, 914498434, 914498435, 914498436, 914498435, 914498434, 914498436, 914498435, 914498435, 914498435, 914498436, 914498435, 914498435, 914498436, 914498435, 914498436, 914498434, 914498435, 914498434, 914498434, 914498434, 914498434, 914498434, 914498436, 914498435, 914498436, 914498435, 914498435, 914498435, 914498434, 914498434, 914498436, 914498436, 914498436, 914498435, 914498434, 914498436, 914498434, 914498436, 914498434, 914498436, 914498435, 914498434, 914498434, 914498434, 914498435, 914498434, 914498435, 914498434, 914498434, 914498435, 914498436, 914498436, 914498434, 914498435, 914498434, 914498436, 914498434, 914498435, 914498435, 914498436, 914498435, 914498435, 914498435, 914498435, 914498436, 914498436, 914498434, 914498434, 914498435, 914498435, 914498434, 914498434, 914498435, 914498434, 914498435, 914498434, 914498435, 914498436, 914498436, 914498436, 914498436, 914498436, 914498435, 914498436, 914498435, 914498436, 914498436, 914498436, 914498434, 914498435, 914498436, 914498436, 914498436, 914498435, 914498434, 914498436, 914498435, 914498435, 914498436, 914498436, 914498434, 914498434, 914498436, 914498436, 914498434, 914498435, 914498434, 914498436, 914498436, 914498434, 914498434, 914498436, 914498436, 914498436, 914498435, 914498434, 914498436, 914498435, 914498434, 914498434, 914498436, 914498434, 914498435, 914498435, 914498435, 914498436, 914498435, 914498436,
       914498435, 914498435, 914498436, 914498435, 914498435, 914498434, 914498435, 914498435, 914498436, 914498435, 914498436, 914498435, 914498436, 914498434, 914498434, 914498435, 914498436, 914498436, 914498434, 914498436, 914498434, 914498434, 914498434, 914498434, 914498435, 914498436, 914498436, 914498434, 914498435, 914498434, 914498434, 914498436, 914498435, 914498434, 914498435, 914498436, 914498434, 914498434, 914498436, 914498434, 914498436, 914498435, 914498436, 914498436, 914498436, 914498434, 914498435, 914498435, 914498434, 914498435, 914498435, 914498435, 914498436, 914498436, 914498436, 914498435, 914498435, 914498436, 914498435, 914498436, 914498436, 914498436, 914498434, 914498436, 914498434, 914498435, 914498435, 914498435, 914498435, 914498434, 914498436, 914498436, 914498436, 914498436, 914498435, 914498435, 914498434, 914498436, 914498435, 914498434, 914498436, 914498434, 914498436, 914498436, 914498434, 914498436, 914498434, 914498435, 914498436, 914498436, 914498435, 914498436, 914498436, 914498435, 914498435, 914498434, 914498435, 914498434, 914498436, 914498434, 914498435, 914498436, 914498436, 914498436, 914498435, 914498434, 914498435, 914498435, 914498435, 914498436, 914498435, 914498434, 914498434, 914498435, 914498436, 914498434, 914498435, 914498434, 914498435, 914498434, 914498436, 914498435, 914498436, 914498436, 914498434, 914498435, 914498434, 914498435, 914498436, 914498434, 914498436, 914498435, 914498436, 914498435, 914498434, 914498435, 914498434, 914498436, 914498436, 914498436, 914498436, 914498435, 914498436, 914498434, 914498436, 914498436, 914498434, 914498435, 914498436, 914498434, 914498435, 914498436, 914498435, 914498435, 914498434, 914498436, 914498434, 914498434, 914498435, 914498436, 914498435, 914498434, 914498434, 914498434, 914498436, 914498436, 914498436, 914498434, 914498436, 914498435, 914498436, 914498435, 914498434, 914498436, 914498436, 914498434, 914498436, 914498435, 914498436, 914498435, 914498435, 914498435, 914498436, 914498434, 914498436, 914498436, 914498436, 914498436]
print(longestSubarray(arr))
# if __name__ == '__main__':
#     fptr = open(os.environ['OUTPUT_PATH'], 'w')

#     arr_count = int(input().strip())

#     arr = []

#     for _ in range(arr_count):
#         arr_item = int(input().strip())
#         arr.append(arr_item)

#     result = longestSubarray(arr)

#     fptr.write(str(result) + '\n')

#     fptr.close()
